#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

#
# Cassandra Sidecar configuration file
#
cassandra_instances:
  - id: 1
    host: localhost1
    port: 9042

    # The instance's storage directory as defined per the cassandra.storagedir property
    # which defaults to the $CASSANDRA_HOME/data directory, but can be configured to any
    # directory. By default, storage directory is the parent directory of data dirs,
    # commitlog dir, cdc dir, hints dir and saved caches dir. If data_dirs, commitlog_dir,
    # cdc_dir, hints_dir and saved_caches_dir are configured explicitly, then they will be used.
    # Otherwise, default paths based on storage directory will be used.
    storage_dir: /var/lib/cassandra

    # List of directories where Cassandra stores data on disk. If not set, the default directory
    # is <storage_dir>/data
    #data_dirs:
    #  - /var/lib/cassandra/data

    # A temporary directory used to stage sstables before importing them into Cassandra.
    staging_dir: /var/lib/cassandra/sstable-staging

    # Directory where Cassandra stores mutations. If not set, the default directory is
    # <storage_dir>/cdc_raw.
    #cdc_dir: /var/lib/cassandra/cdc_raw

    # Directory where Cassandra stores the commit logs. If not set, the default directory
    # is <storage_dir>/commitlog
    #commitlog_dir: /var/lib/cassandra/commitlog

    # Directory where Cassandra stores hints. If not set, the default directory is
    # <storage_dir>/hints.
    #hints_dir: /var/lib/cassandra/hints

    # Directory where Cassandra stores the saved caches. If not set, the default directory
    # is <storage_dir>/saved_caches
    #saved_caches_dir: /var/lib/cassandra/saved_caches

    # Directory where Cassandra stores the data of the local system keyspaces.
    # By default, Cassandra stores the data of the local system keyspaces in the
    # first of the data directories specified by data_file_directories.
    # local_system_data_file_directory:

    jmx_host: 127.0.0.1
    jmx_port: 7199
    jmx_ssl_enabled: false
#    jmx_role:
#    jmx_role_password:

sidecar:
  host: 0.0.0.0
  port: 9043
  request_idle_timeout: 5m
  request_timeout: 5m
  tcp_keep_alive: false
  accept_backlog: 1024
  server_verticle_instances: 1
  throttle:
    stream_requests_per_sec: 5000
    timeout: 10s
  traffic_shaping:
    inbound_global_bandwidth_bps: 0               # 0 implies unthrottled, the inbound bandwidth in bytes per second
    outbound_global_bandwidth_bps: 0              # 0 implies unthrottled, the outbound bandwidth in bytes per second
    peak_outbound_global_bandwidth_bps: 419430400 # the peak outbound bandwidth in bytes per second. The default is 400 mebibytes per second
    max_delay_to_wait: 15s                        # 15 seconds
    check_interval_for_stats: 1s                  # 1 second
    inbound_global_file_bandwidth_bps: 0          # 0 implies unthrottled, the inbound bandwidth allocated for incoming files in bytes per second, upper-bounded by inbound_global_bandwidth_bps
  sstable_upload:
    concurrent_upload_limit: 80
    min_free_space_percent: 10
    # file_permissions: "rw-r--r--" # when not specified, the default file permissions are owner read & write, group & others read
  # The maximum allowable time skew between the server and the client.
  # Resolution is in minutes. The minimum configurable value is 1 minute.
  allowable_time_skew: 1h
  sstable_import:
    execute_interval: 100ms
    cache:
      expire_after_access: 2h # 2 hours
      maximum_size: 10000
  sstable_snapshot:
    snapshot_list_cache:
      expire_after_access: 2h # 2 hours
      maximum_size: 10000
  cdc:
    segment_hardlink_cache_expiry: 5m # 5 minutes
  worker_pools:
    service:
      name: "sidecar-worker-pool"
      size: 20
      max_execution_time: 1m # 1 minute
    internal:
      name: "sidecar-internal-worker-pool"
      size: 20
      max_execution_time: 15m # 15 minutes
  jmx:
    max_retries: 3
    retry_delay: 200ms
  schema:
    is_enabled: false
    keyspace: sidecar_internal
    replication_strategy: SimpleStrategy
    replication_factor: 1
    # The TTL in seconds used to insert entries into the sidecar_lease schema
    lease_schema_ttl: 2m
  coordination:
    # Captures configuration parameters for the task that performs the cluster lease claim process
    cluster_lease_claim:
      # Whether the process is enabled
      enabled: true
      # The initial delay for the first execution of the cluster lease claim process task after being
      # scheduled or rescheduled.
      # The minimum value for the initial delay is 0ms.
      initial_delay: 1s
      # How often the cluster lease claim process task will execute after the previous task has completed
      # the execution.
      # The minimum value allowed for the cluster lease claim process task implementation is 30 seconds
      execute_interval: 1m

vertx:
  filesystem_options:
    classpath_resolving_enabled: false
    file_caching_enabled: false

schema_reporting:                            # Schema Reporting configuration
  enabled:          false                    # Disabled by default
  initial_delay:    6h                       # Maximum delay before the first schema report (actual delay is randomized)
  execute_interval: 12h                      # Exact interval between two sequential schema reports
  endpoint:         http://localhost/schema  # Endpoint address for schema reporting
  method:           PUT                      # HTTP verb to use for schema reporting
  retries:          3                        # Number of times a failing schema report is retried

#
# Enable SSL configuration (Disabled by default)
#
#  ssl:
#    enabled: true
#    use_openssl: true
#    handshake_timeout: 10s
#    client_auth: NONE # valid options are NONE, REQUEST, REQUIRED
#    accepted_protocols:
#     - TLSv1.2
#     - TLSv1.3
#    cipher_suites: []
#    keystore:
#      type: PKCS12
#      path: "path/to/keystore.p12"
#      password: password
#      check_interval: 5m
#    truststore:
#      path: "path/to/truststore.p12"
#      password: password

access_control:
  # When enabled requests need to be authenticated and authorized before servicing.
  enabled: false
  # Supports setting multiple authenticators, request is authenticated if it is authenticated by any of the
  # configured authenticators
  authenticators:
    - class_name: org.apache.cassandra.sidecar.acl.authentication.MutualTlsAuthenticationHandlerFactory
      parameters:
        # Certificate validator is used to validate details within a certificate, such as issuer organization,
        # issuer country, CNs, certificate expiry etc.
        #
        # io.vertx.ext.auth.mtls.impl.AllowAllCertificateValidator performs no checks, it marks all certificates as valid.
        # other options are, io.vertx.ext.auth.mtls.impl.CertificateValidatorImpl
        certificate_validator: io.vertx.ext.auth.mtls.impl.AllowAllCertificateValidator
        # CertificateIdentityExtractor is used to extract valid identities from certificates. These identities will be
        # used for authorizing users.
        #
        # org.apache.cassandra.sidecar.acl.authentication.CassandraIdentityExtractor verifies that identity
        # extracted from certificate is present in identity_to_role table. Identities in identity_to_role table in
        # Cassandra are authenticated identities in Cassandra.
        #
        # other options are, io.vertx.ext.auth.mtls.impl.SpiffeIdentityExtractor.
        certificate_identity_extractor: org.apache.cassandra.sidecar.acl.authentication.CassandraIdentityExtractor
  authorizer:
    # Authorization backend, implementing io.vertx.ext.auth.authorization.AuthorizationProvider; used to
    # provide permissions a user holds.
    # Out of the box, Cassandra Sidecar provides
    # org.apache.cassandra.sidecar.acl.authorization.{AllowAllAuthorizationProvider, RoleBasedAuthorizationProvider}.
    #
    # - AllowAllAuthorizationProvider  allows any action to any user - use it to disable authorization.
    # - RoleBasedAuthorizationProvider validates role associated with authenticated user has permission
    #                                  for resource it accesses.
    - class_name: org.apache.cassandra.sidecar.acl.authorization.AllowAllAuthorizationProvider
  # Identities that are authenticated and authorized.
  admin_identities:
#    - spiffe://authorized/admin/identities
  permission_cache:
    enabled: true
    expire_after_access: 5m
    maximum_size: 1000
    warmup_retries: 5
    warmup_retry_interval: 2s

driver_parameters:
  contact_points:
    - "127.0.0.1:9042"
    - "127.0.0.2:9042"
  username: cassandra
  password: cassandra
  ssl:
    enabled:  false
    keystore:
      type: PKCS12
      path: path/to/keystore.p12
      password: password
    truststore:
      type: PKCS12
      path: path/to/keystore.p12
      password: password
  num_connections: 6
#  local_dc: datacenter1

healthcheck:
  initial_delay: 0ms
  execute_interval: 30s

sidecar_peer_health:
  enabled: true
  execute_interval: 30s
  health_check_retries: 5
  health_check_retry_delay: 10s

metrics:
  registry_name: cassandra_sidecar
  vertx:
    enabled: true
    expose_via_jmx: false
    jmx_domain_name: sidecar.vertx.jmx_domain
  include:                                    # empty include list means include all
    - type: "regex"                           # possible filter types are "regex" and "equals"
      value: "Sidecar.*"
    - type: "regex"
      value: "vertx.*"
  exclude:                                    # empty exclude list means exclude nothing
#    - type: "regex"                          # possible filter types are "regex" and "equals"
#      value: "vertx.eventbus.*"              # exclude all metrics starts with vertx.eventbus

cassandra_input_validation:
  forbidden_keyspaces:
    - system_schema
    - system_traces
    - system_distributed
    - system
    - system_auth
    - system_views
    - system_virtual_schema
    - sidecar_internal
  allowed_chars_for_directory: "[a-zA-Z][a-zA-Z0-9_]{0,47}"
  allowed_chars_for_quoted_name: "[a-zA-Z_0-9]{1,48}"
  allowed_chars_for_component_name: "[a-zA-Z0-9_-]+(.db|.cql|.json|.crc32|TOC.txt)"
  allowed_chars_for_restricted_component_name: "[a-zA-Z0-9_-]+(.db|TOC.txt)"

blob_restore:
  job_discovery_active_loop_delay: 5m
  job_discovery_idle_loop_delay: 10m
  job_discovery_recency_days: 5
  slice_process_max_concurrency: 20
  restore_job_tables_ttl: 90d
  slow_task_threshold: 10m
  slow_task_report_delay: 1m
  ring_topology_refresh_delay: 1m

s3_client:
  concurrency: 4
  thread_name_prefix: s3-client
  thread_keep_alive: 1m
  api_call_timeout: 1m # 1 minute
  range_get_object_bytes_size: 5242880  # 5 MiB
#  proxy_config:
#    uri:
#    username:
#    password:
